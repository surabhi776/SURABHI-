import java.util.Arrays;
import java.util.Scanner;

public class SortingAndRecursion {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] array = {64, 25, 12, 22, 11};
        System.out.println("Original Array: " + Arrays.toString(array));
        bubbleSort(array.clone());  

        selectionSort(array.clone());
        System.out.print("\nEnter a number to find its factorial: ");
        int num = scanner.nextInt();
        System.out.println("Factorial of " + num + " is: " + factorial(num));
        System.out.print("\nEnter number of terms for Fibonacci sequence: ");
        int n = scanner.nextInt();
        System.out.print("Fibonacci Sequence up to " + n + " terms: ");
        for (int i = 0; i < n; i++) {
            System.out.print(fibonacci(i) + " ");
        }
        System.out.print("\n\nEnter a string to reverse: ");
        String str = scanner.next();
        System.out.println("Reversed String: " + reverseString(str));

        scanner.close();
    }
    public static void bubbleSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
        System.out.println("Bubble Sorted Array: " + Arrays.toString(arr));
    }
    public static void selectionSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }
            int temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
        System.out.println("Selection Sorted Array: " + Arrays.toString(arr));
    }
    public static int factorial(int num) {
        if (num == 0 || num == 1) return 1;
        return num * factorial(num - 1);
    }
    public static int fibonacci(int n) {
        if (n == 0) return 0;
        if (n == 1) return 1;
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
    public static String reverseString(String str) {
        if (str.isEmpty()) return str;
        return reverseString(str.substring(1)) + str.charAt(0);
    }
}
