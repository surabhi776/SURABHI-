import java.util.*;
import java.util.function.*;
import java.util.stream.Collectors;

class Person {
    String name;

    Person(String name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return name;
    }
}

public class LambdaExpressionsExample {
    public static void main(String[] args) {
        List<Integer> numbers = Arrays.asList(5, 12, 8, 20, 3, 15);
        Predicate<Integer> filterNumbers = num -> num > 10;
        List<Integer> filteredNumbers = numbers.stream()
                                               .filter(filterNumbers)
                                               .collect(Collectors.toList());
        System.out.println("Numbers greater than 10: " + filteredNumbers);
        List<String> words = Arrays.asList("hello", "java", "lambda");
        Function<String, String> toUpperCase = String::toUpperCase;
        List<String> upperWords = words.stream()
                                       .map(toUpperCase)
                                       .collect(Collectors.toList());
        System.out.println("Uppercase words: " + upperWords);
        Consumer<String> printUpperCase = str -> System.out.println(str.toUpperCase());
        words.forEach(printUpperCase);
        List<Person> people = Arrays.asList(new Person("Surabhi"), new Person("Tanvi"), new Person("Suhani"));
        people.sort(Comparator.comparing(person -> person.name.charAt(1)));
        System.out.println("Sorted Persons based on second character: " + people);
    }
}
