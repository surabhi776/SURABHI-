import java.text.SimpleDateFormat;
import java.util.Date;
class Logger {
    private static volatile Logger instance;

    private Logger() {}

    public static Logger getInstance() {
        if (instance == null) {
            synchronized (Logger.class) {
                if (instance == null) {
                    instance = new Logger();
                }
            }
        }
        return instance;
    }

    public void log(String message) {
        String timestamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
        System.out.println("[" + timestamp + "] " + message);
    }
}
class DatabaseConnection {
    private static DatabaseConnection instance;

    private DatabaseConnection() {}

    public static DatabaseConnection getInstance() {
        if (instance == null) {
            synchronized (DatabaseConnection.class) {
                if (instance == null) {
                    instance = new DatabaseConnection();
                }
            }
        }
        return instance;
    }

    public void connect() {
        System.out.println("Connected to the database.");
    }

    public void disconnect() {
        System.out.println("Disconnected from the database.");
    }
}
enum UserRole {
    ADMIN, USER, GUEST;

    public void printAccessLevel() {
        switch (this) {
            case ADMIN -> System.out.println("ADMIN: Full access to the system.");
            case USER -> System.out.println("USER: Limited access to system features.");
            case GUEST -> System.out.println("GUEST: Read-only access.");
        }
    }
}
enum Day {
    SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY;

    public boolean isWeekend() {
        return this == SATURDAY || this == SUNDAY;
    }
}
enum StatusCode {
    SUCCESS("Operation was successful."),
    ERROR("An error occurred."),
    PENDING("Operation is pending.");

    private final String message;

    StatusCode(String message) {
        this.message = message;
    }

    public String getMessage() {
        return message;
    }
}
public class SingletonAndEnumDemo {
    public static void main(String[] args) {
        Logger logger = Logger.getInstance();
        logger.log("Application Started");
        DatabaseConnection dbConnection = DatabaseConnection.getInstance();
        dbConnection.connect();
        dbConnection.disconnect();
        UserRole role = UserRole.ADMIN;
        role.printAccessLevel();

        Day today = Day.SATURDAY;
        System.out.println(today + " is a " + (today.isWeekend() ? "Weekend" : "Weekday"));
        StatusCode status = StatusCode.SUCCESS;
        System.out.println("Status: " + status + " - " + status.getMessage());

        logger.log("Application Finished");
    }
}
