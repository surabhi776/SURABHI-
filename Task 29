import java.sql.*;

public class StudentJDBC {

    private static final String URL = "jdbc:mysql://localhost:3306/school_db";
    private static final String USER = "root";  
    private static final String PASSWORD = "password"; 

    public static void main(String[] args) {
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            System.out.println("Connected to MySQL!");
            insertStudent(conn, "John Doe", 20, "A");
            updateStudent(conn, 1, "John Doe Updated", 21, "A+");
            retrieveStudents(conn);
            deleteStudent(conn, 1);
            callStoredProcedure(conn);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private static void insertStudent(Connection conn, String name, int age, String grade) throws SQLException {
        String sql = "INSERT INTO students (name, age, grade) VALUES (?, ?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setInt(2, age);
            stmt.setString(3, grade);
            int rows = stmt.executeUpdate();
            System.out.println("Inserted " + rows + " student(s)");
        }
    }
    private static void updateStudent(Connection conn, int id, String name, int age, String grade) throws SQLException {
        String sql = "UPDATE students SET name = ?, age = ?, grade = ? WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setInt(2, age);
            stmt.setString(3, grade);
            stmt.setInt(4, id);
            int rows = stmt.executeUpdate();
            System.out.println("Updated " + rows + " student(s)");
        }
    }
    private static void retrieveStudents(Connection conn) throws SQLException {
        String sql = "SELECT * FROM students";
        try (Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("Student Records:");
            while (rs.next()) {
                System.out.println("ID: " + rs.getInt("id") +
                        ", Name: " + rs.getString("name") +
                        ", Age: " + rs.getInt("age") +
                        ", Grade: " + rs.getString("grade"));
            }
        }
    }
    private static void deleteStudent(Connection conn, int id) throws SQLException {
        String sql = "DELETE FROM students WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, id);
            int rows = stmt.executeUpdate();
            System.out.println("Deleted " + rows + " student(s)");
        }
    }
    private static void callStoredProcedure(Connection conn) throws SQLException {
        String sql = "{CALL GetAllEmployees()}";
        try (CallableStatement stmt = conn.prepareCall(sql);
             ResultSet rs = stmt.executeQuery()) {
            System.out.println("\nEmployee Records:");
            while (rs.next()) {
                System.out.println("Emp ID: " + rs.getInt("emp_id") +
                        ", Name: " + rs.getString("emp_name") +
                        ", Department: " + rs.getString("department"));
            }
        }
    }
}
