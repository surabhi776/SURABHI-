import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Stack;

class Patient implements Comparable<Patient> {
    String name;
    int priority; 

    public Patient(String name, int priority) {
        this.name = name;
        this.priority = priority;
    }
    public int compareTo(Patient other) {
        return Integer.compare(other.priority, this.priority); 
    }
    public String toString() {
        return "Patient: " + name + ", Priority: " + priority;
    }
}

public class StackAndPriorityQueue {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string to reverse: ");
        String inputString = scanner.nextLine();
        System.out.println("Reversed String: " + reverseString(inputString));
        PriorityQueue<Patient> hospitalQueue = new PriorityQueue<>();
        hospitalQueue.add(new Patient("Alice", 3));  
        hospitalQueue.add(new Patient("Bob", 5));    
        hospitalQueue.add(new Patient("Charlie", 1)); 
        hospitalQueue.add(new Patient("David", 4));  

        System.out.println("\nHospital Emergency Queue (Highest priority first):");
        while (!hospitalQueue.isEmpty()) {
            System.out.println(hospitalQueue.poll());
        }

        scanner.close();
    }
    public static String reverseString(String str) {
        Stack<Character> stack = new Stack<>();
        for (char c : str.toCharArray()) {
            stack.push(c);
        }

        StringBuilder reversed = new StringBuilder();
        while (!stack.isEmpty()) {
            reversed.append(stack.pop());
        }
        return reversed.toString();
    }
}
